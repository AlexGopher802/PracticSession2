<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="groupBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>